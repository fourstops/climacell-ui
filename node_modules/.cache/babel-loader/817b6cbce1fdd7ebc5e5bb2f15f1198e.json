{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/Documents/GitHub/climacell-ui/src/components/app.component.js\";\nimport React from 'react';\nimport './app.component.css';\nimport { Realtime } from './realtime.component';\nimport { Hourly } from './hourly.component';\nimport { useHourly, useRealtime } from '../hooks/use-weather.hook';\nimport ClimacellIcon from \"../icons/climacell-icon-colored.svg\";\nimport PinIcon from \"../icons/pin.svg\";\nimport { addHours } from '../utilities';\nconst now = new Date();\nconst sixHoursFromNow = addHours({\n  date: now,\n  hours: 6\n});\n\nfunction Loading() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }\n  }, \"Loading...\");\n}\n\nfunction Error() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }\n  }, \"Oops! Something went wrong :(\");\n}\n\nfunction PoweredByClimacell() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"powered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"powered-link\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: \"https://www.climacell.co\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"icon powered-icon\",\n    src: ClimacellIcon,\n    alt: \"Powered by ClimaCell\",\n    title: \"Powered by ClimaCell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }), \"Powered by ClimaCell\"));\n}\n\nfunction App({\n  apikey,\n  lat,\n  lon,\n  location\n}) {\n  const [realtimeResponse, loadingRealtime, realtimeHasError] = useRealtime({\n    apikey,\n    lat,\n    lon\n  });\n  const [hourlyResponse, loadingHourly, hourlyHasError] = useHourly({\n    apikey,\n    lat,\n    lon,\n    start: now //end: sixHoursFromNow\n\n  });\n\n  if (loadingRealtime || loadingHourly) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 16\n      }\n    });\n  }\n\n  if (realtimeHasError || hourlyHasError) {\n    return /*#__PURE__*/React.createElement(Error, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-root\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PoweredByClimacell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, now.toDateString()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"icon location-icon\",\n    src: PinIcon,\n    alt: location,\n    title: location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), location), /*#__PURE__*/React.createElement(Realtime, {\n    realtime: realtimeResponse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Hourly, {\n    hourly: hourlyResponse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport { App };","map":{"version":3,"sources":["/Users/andrew/Documents/GitHub/climacell-ui/src/components/app.component.js"],"names":["React","Realtime","Hourly","useHourly","useRealtime","addHours","now","Date","sixHoursFromNow","date","hours","Loading","Error","PoweredByClimacell","ClimacellIcon","App","apikey","lat","lon","location","realtimeResponse","loadingRealtime","realtimeHasError","hourlyResponse","loadingHourly","hourlyHasError","start","toDateString","PinIcon"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './app.component.css';\nimport { Realtime } from './realtime.component';\nimport { Hourly } from './hourly.component';\nimport { useHourly, useRealtime } from '../hooks/use-weather.hook';\nimport ClimacellIcon from '../icons/climacell-icon-colored.svg';\nimport PinIcon from '../icons/pin.svg';\nimport { addHours } from '../utilities';\n\nconst now = new Date();\nconst sixHoursFromNow = addHours({ date: now, hours: 6 });\n\nfunction Loading() {\n    return <div>Loading...</div>;\n}\n\nfunction Error() {\n    return <div>Oops! Something went wrong :(</div>;\n}\n\nfunction PoweredByClimacell() {\n    return (\n        <div className='powered'>\n            <a className='powered-link' target='_blank' rel='noopener noreferrer' href='https://www.climacell.co'>\n                <img className='icon powered-icon'\n                    src={ClimacellIcon}\n                    alt='Powered by ClimaCell'\n                    title='Powered by ClimaCell' />\n                Powered by ClimaCell\n            </a>\n        </div>\n    );\n}\n\nfunction App({ apikey, lat, lon, location }) {\n    const [realtimeResponse, loadingRealtime, realtimeHasError] = useRealtime({\n        apikey, lat, lon\n    });\n    const [hourlyResponse, loadingHourly, hourlyHasError] = useHourly({\n        apikey, lat, lon, start: now, //end: sixHoursFromNow\n    });\n\n    if (loadingRealtime || loadingHourly) {\n        return <Loading />;\n    }\n\n    if (realtimeHasError || hourlyHasError) {\n        return <Error />;\n    }\n\n    return (\n        <div className='app-root'>\n            <PoweredByClimacell />\n            <div className='time'>{now.toDateString()}</div>\n            <div className='location'>\n                <img className='icon location-icon'\n                    src={PinIcon}\n                    alt={location}\n                    title={location} />\n                {location}\n            </div>\n            <Realtime realtime={realtimeResponse} />\n            <div className='divider' />\n            <Hourly hourly={hourlyResponse} />\n        </div>\n    );\n}\n\nexport { App };\n"]},"metadata":{},"sourceType":"module"}