{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pi/climacell/src/components/app.component.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './app.component.css';\nimport { Realtime } from \"./realtime.component\";\nimport { Hourly } from \"./hourly.component\";\nimport { useHourly, useRealtime } from \"../hooks/use-weather.hook\";\nimport ClimacellIcon from \"../icons/climacell-icon-colored.svg\";\nimport PinIcon from \"../icons/pin.svg\";\nimport { addHours } from \"../utilities\";\nconst now = new Date();\nconst sixHoursFromNow = addHours({\n  date: now,\n  hours: 6\n});\n\nfunction Loading() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 12\n  }, this);\n}\n\n_c = Loading;\n\nfunction Error() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Oops! Something went wrong :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 12\n  }, this);\n}\n\n_c2 = Error;\n\nfunction PoweredByClimacell() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"powered\",\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"powered-link\",\n      target: \"_blank\",\n      href: \"https://www.climacell.co\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"icon powered-icon\",\n        src: ClimacellIcon,\n        alt: \"Powered by ClimaCell\",\n        title: \"Powered by ClimaCell\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), \"Powered by ClimaCell\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_c3 = PoweredByClimacell;\n\nfunction App({\n  apikey,\n  lat,\n  lon,\n  location\n}) {\n  _s();\n\n  const [realtimeResponse, loadingRealtime, realtimeHasError] = useRealtime({\n    apikey,\n    lat,\n    lon\n  });\n  const [hourlyResponse, loadingHourly, hourlyHasError] = useHourly({\n    apikey,\n    lat,\n    lon,\n    start: now,\n    end: sixHoursFromNow\n  });\n\n  if (loadingRealtime || loadingHourly) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (realtimeHasError || hourlyHasError) {\n    return /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-root\",\n    children: [/*#__PURE__*/_jsxDEV(PoweredByClimacell, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time\",\n      children: now.toDateString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"icon location-icon\",\n        src: PinIcon,\n        alt: location,\n        title: location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), location]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Realtime, {\n      realtime: realtimeResponse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"divider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Hourly, {\n      hourly: hourlyResponse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"hv5lQI0V4oZXBT5iIDCkkh7QbMU=\", false, function () {\n  return [useRealtime, useHourly];\n});\n\n_c4 = App;\nexport { App };\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Loading\");\n$RefreshReg$(_c2, \"Error\");\n$RefreshReg$(_c3, \"PoweredByClimacell\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/home/pi/climacell/src/components/app.component.js"],"names":["React","Realtime","Hourly","useHourly","useRealtime","addHours","now","Date","sixHoursFromNow","date","hours","Loading","Error","PoweredByClimacell","ClimacellIcon","App","apikey","lat","lon","location","realtimeResponse","loadingRealtime","realtimeHasError","hourlyResponse","loadingHourly","hourlyHasError","start","end","toDateString","PinIcon"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './app.component.css';\nimport { Realtime } from \"./realtime.component\";\nimport { Hourly } from \"./hourly.component\";\nimport { useHourly, useRealtime } from \"../hooks/use-weather.hook\";\nimport ClimacellIcon from '../icons/climacell-icon-colored.svg';\nimport PinIcon from '../icons/pin.svg';\nimport { addHours } from \"../utilities\";\n\nconst now = new Date();\nconst sixHoursFromNow = addHours({ date: now, hours: 6 });\n\nfunction Loading() {\n    return <div>Loading...</div>;\n}\n\nfunction Error() {\n    return <div>Oops! Something went wrong :(</div>;\n}\n\nfunction PoweredByClimacell() {\n    return (\n        <div className=\"powered\">\n            <a className=\"powered-link\" target=\"_blank\" href=\"https://www.climacell.co\">\n                <img className=\"icon powered-icon\"\n                     src={ClimacellIcon}\n                     alt=\"Powered by ClimaCell\"\n                     title=\"Powered by ClimaCell\" />\n                Powered by ClimaCell\n            </a>\n        </div>\n    );\n}\n\nfunction App({ apikey, lat, lon, location }) {\n    const [realtimeResponse, loadingRealtime, realtimeHasError] = useRealtime({\n        apikey, lat, lon\n    });\n    const [hourlyResponse, loadingHourly, hourlyHasError] = useHourly({\n        apikey, lat, lon, start: now, end: sixHoursFromNow\n    });\n\n    if (loadingRealtime || loadingHourly) {\n        return <Loading />;\n    }\n\n    if (realtimeHasError || hourlyHasError) {\n        return <Error />;\n    }\n\n    return (\n        <div className=\"app-root\">\n            <PoweredByClimacell />\n            <div className=\"time\">{now.toDateString()}</div>\n            <div className=\"location\">\n                <img className=\"icon location-icon\"\n                     src={PinIcon}\n                     alt={location}\n                     title={location} />\n                {location}\n            </div>\n            <Realtime realtime={realtimeResponse} />\n            <div className=\"divider\" />\n            <Hourly hourly={hourlyResponse} />\n        </div>\n    );\n}\n\nexport { App };\n"]},"metadata":{},"sourceType":"module"}